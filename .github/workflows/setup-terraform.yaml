name: 'Setup Terraform'

on:
  push:
    branches:
      - master
  pull_request:

env:
  tf_actions_working_dir: ./terraform

defaults:
  run:
    shell: bash

jobs:
  terraform-checks-and-plan:
    name: 'Terraform Checks & Plan'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        terraform-versions: [ ~0.12, 0.12.x, <0.13.0 ]
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `# Terraform checks & plan

            ## Steps
            - 🖌 \`terraform fmt\`: ${{ steps.fmt.outcome }}
            - ⚙ \`terraform init\`: ️${{ steps.init.outcome }}
            - 🤖 \`terraform validate\`: ${{ steps.validate.outputs.stdout }}
            - 📖 \`terraform plan\`: ${{ steps.plan.outcome }}

            <details><summary>Click to expand plan logs</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            ## Context
            - OS: \`${{ matrix.os }}\`
            - Terraform version: \`${{ matrix.terraform-versions }}\`
            - Pusher: @${{ github.actor }}
            - Action: \`${{ github.event_name }}\`
            - Working directory: \`${{ env.tf_actions_working_dir }}\`
            - Workflow: \`${{ github.workflow }}\``;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

